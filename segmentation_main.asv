%% read the point cloud
datafolder = 'scans/scans/Scan';
datasuffix = '00000.pcd';

%% Get all the drones from the scenes and turn them into descriptors
dronedescriptors = cell(50);
currcell = 1;
for scene = 1:1:20
    
    % get current scene, ground truths
    ptCloud = pcread(join([datafolder, string(scene), datasuffix], ''));
    X = getfield(load(join(["data/", string(scene), "data.mat"], '')), 'data');
    y = getfield(load(join(["data/", string(scene), "classes.mat"], '')), 'classes');
    ClusterIndices = RBNN(ptCloud.Location, 4.0, 5);
    segmentation_plot(ptCloud, ClusterIndices);
    
    % get all drones in the scene
    dronepos = X(y == 1, :);
    for i = 1:1:size(dronepos, 1) 
        % find the centroid and bounding box of the current drone
        centroid = dronepos(i, :);
        cid = segmentation_segsimple(ptCloud.Location, ClusterIndices, centroid);
        dronePts = ptCloud.Location(ClusterIndices == cid, :);
        
        % continue if the cluster is too small
        if max(size(dronePts)) < 3
            continue;
        end
            
        droneCentroid = mean(dronePts);
        
        % continue if the cluster 
        
        droneBoundingBox = max(dronePts) - min(dronePts) + [1, 1, 1];
        plotcube(droneBoundingBox, droneCentroid - droneBoundingBox/2, .3, [1 0 1]);
        % compute the descriptor
        sigma = norm(droneCentroid) * 0.001;
        %template = points_to_gaussian_field(dronePts, droneCentroid - droneBoundingBox / 2, droneBoundingBox, 30, sigma);
        
        %dronedescriptors{currcell} = template;
        currcell = currcell + 1;
    end
end
